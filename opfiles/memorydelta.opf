//This file specifies the computer's instructions

//This is the instruction at startup
* FETCH 0 0
0:PC0_OE FLSH_MAR0
1:PC8_OE FLSH_MAR8 FLSH_OPC0=OFF FLSH_OPC8=ON FLSH_TRIG
2:REGINS_WR FLSH_CLEAR KEY_INT_ENABLE PC_CLK

// Transfers data from the specified address in FLASH to REGISTER-A
//
// Expects FLASH MAR0 MAR8 to be populated with correct address
// to read before operation is executed.
//
//With flash trigger tied to !CLK and FLSH_CLEAR either tied to !CLK or
//with correct delay timed
//
* FLASH_REGA 5 2
0:PC0_OE FLSH_MAR0
1:PC8_OE FLSH_MAR8 FLSH_OPC0=OFF FLSH_OPC8=ON FLSH_TRIG
2:REGINS_WR FLSH_CLEAR KEY_INT_ENABLE PC_CLK
3:PC0_OE FLSH_MAR0
4:PC8_OE FLSH_MAR8 FLSH_OPC0=OFF FLSH_OPC8=ON FLSH_TRIG
5:TEMPA_WR FLSH_CLEAR PC_CLK
6:PC0_OE FLSH_MAR0
7:PC8_OE FLSH_MAR8 FLSH_OPC0=OFF FLSH_OPC8=ON FLSH_TRIG
8:TEMPB_WR FLSH_CLEAR PC_CLK
9:TEMPA_OE FLSH_MAR0
10:TEMPB_OE FLSH_MAR8 FLSH_OPC0=OFF FLSH_OPC8=ON FLSH_TRIG
11:REGA_WR FLSH_CLEAR
12:
13:
14:
15:

// Transfers data from the specified address in FLASH to REGISTER-B
//
// Expects FLASH MAR0 MAR8 to be populated with correct address
// to read before operation is executed.
//
//With flash trigger tied to !CLK and FLSH_CLEAR either tied to !CLK or
//with correct delay timed
//
* FLASH_REGB 6 2
0:PC0_OE FLSH_MAR0
1:PC8_OE FLSH_MAR8 FLSH_OPC0=OFF FLSH_OPC8=ON FLSH_TRIG
2:REGINS_WR FLSH_CLEAR KEY_INT_ENABLE PC_CLK
3:PC0_OE FLSH_MAR0
4:PC8_OE FLSH_MAR8 FLSH_OPC0=OFF FLSH_OPC8=ON FLSH_TRIG
5:TEMPA_WR FLSH_CLEAR PC_CLK
6:PC0_OE FLSH_MAR0
7:PC8_OE FLSH_MAR8 FLSH_OPC0=OFF FLSH_OPC8=ON FLSH_TRIG
8:TEMPB_WR FLSH_CLEAR PC_CLK
9:TEMPA_OE FLSH_MAR0
10:TEMPB_OE FLSH_MAR8 FLSH_OPC0=OFF FLSH_OPC8=ON FLSH_TRIG
11:REGB_WR FLSH_CLEAR
12:
13:
14:
15:

* ADD 3 0
0:PC0_OE FLSH_MAR0
1:PC8_OE FLSH_MAR8 FLSH_OPC0=OFF FLSH_OPC8=ON FLSH_TRIG
2:REGINS_WR FLSH_CLEAR KEY_INT_ENABLE PC_CLK
3:ADD
4:ADD REGC_WR
5:PC_CLK

* HALT 4 0
0:PC0_OE FLSH_MAR0
1:PC8_OE FLSH_MAR8 FLSH_OPC0=OFF FLSH_OPC8=ON FLSH_TRIG
2:REGINS_WR FLSH_CLEAR KEY_INT_ENABLE PC_CLK
3:HALT

* REGC_RAM 7 2
0:PC0_OE FLSH_MAR0
1:PC8_OE FLSH_MAR8 FLSH_OPC0=OFF FLSH_OPC8=ON FLSH_TRIG
2:REGINS_WR FLSH_CLEAR KEY_INT_ENABLE PC_CLK
3:PC0_OE FLSH_MAR0
4:PC8_OE FLSH_MAR8 FLSH_OPC0=OFF FLSH_OPC8=ON FLSH_TRIG
5:RAM_MAR0 FLSH_CLEAR PC_CLK
6:PC0_OE FLSH_MAR0
7:PC8_OE FLSH_MAR8 FLSH_OPC0=OFF FLSH_OPC8=ON FLSH_TRIG
8:RAM_MAR8 FLSH_CLEAR PC_CLK
9:REGC_OE RAM_WR
10:
11:
12:
13:
14:

* REGC_FLASH 8 2
0:PC0_OE FLSH_MAR0
1:PC8_OE FLSH_MAR8 FLSH_OPC0=OFF FLSH_OPC8=ON FLSH_TRIG
2:REGINS_WR FLSH_CLEAR KEY_INT_ENABLE PC_CLK
3:PC0_OE FLSH_MAR0
4:PC8_OE FLSH_MAR8 FLSH_OPC0=OFF FLSH_OPC8=ON FLSH_TRIG
5:TEMPA_WR FLSH_CLEAR PC_CLK
6:PC0_OE FLSH_MAR0
7:PC8_OE FLSH_MAR8 FLSH_OPC0=OFF FLSH_OPC8=ON FLSH_TRIG
8:TEMPB_WR FLSH_CLEAR PC_CLK
9:TEMPA_OE FLSH_MAR0
10:TEMPB_OE FLSH_MAR8
11:REGC_OE FLSH_OPC0=ON FLSH_OPC8=OFF FLSH_TRIG
12:
13:
14:

// Load RAM-MAR with instruction-data
//
//With flash trigger tied to !CLK and FLSH_CLEAR either tied to !CLK or
//with correct delay timed
* FLSH_RAM 11 3
0:PC0_OE FLSH_MAR0
1:PC8_OE FLSH_MAR8 FLSH_OPC0=OFF FLSH_OPC8=ON FLSH_TRIG
2:REGINS_WR FLSH_CLEAR KEY_INT_ENABLE PC_CLK
3:PC0_OE FLSH_MAR0
4:PC8_OE FLSH_MAR8 FLSH_OPC0=OFF FLSH_OPC8=ON FLSH_TRIG
5:RAM_MAR0 FLSH_CLEAR PC_CLK
6:PC0_OE FLSH_MAR0
7:PC8_OE FLSH_MAR8 FLSH_OPC0=OFF FLSH_OPC8=ON FLSH_TRIG
8:RAM_MAR8 FLSH_CLEAR PC_CLK
9:PC0_OE FLSH_MAR0
10:PC8_OE FLSH_MAR8 FLSH_OPC0=OFF FLSH_OPC8=ON FLSH_TRIG
11:RAM_WR FLSH_CLEAR PC_CLK
12:
13:
14:
15:

// Load RAM-MAR with instruction-data
//
//With flash trigger tied to !CLK and FLSH_CLEAR either tied to !CLK or
//with correct delay timed
* RAM_REGA 12 2
0:PC0_OE FLSH_MAR0
1:PC8_OE FLSH_MAR8 FLSH_OPC0=OFF FLSH_OPC8=ON FLSH_TRIG
2:REGINS_WR FLSH_CLEAR KEY_INT_ENABLE PC_CLK
3:PC0_OE FLSH_MAR0
4:PC8_OE FLSH_MAR8 FLSH_OPC0=OFF FLSH_OPC8=ON FLSH_TRIG
5:RAM_MAR0 FLSH_CLEAR PC_CLK
6:PC0_OE FLSH_MAR0
7:PC8_OE FLSH_MAR8 FLSH_OPC0=OFF FLSH_OPC8=ON FLSH_TRIG
8:RAM_MAR8 FLSH_CLEAR PC_CLK
9:RAM_OE REGA_WR
10:
11:
12:
13:
14:
15:
